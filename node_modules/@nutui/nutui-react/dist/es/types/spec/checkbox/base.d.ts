import { ReactNode } from 'react';
import { BaseProps } from '../../base/props';
import { PositionX } from '../../base/atoms';
export type CheckboxLimit = 'max' | 'min';
export type CheckboxDirection = 'horizontal' | 'vertical';
export type CheckboxShape = 'button' | 'round';
export interface CheckboxGroupOption {
    label: string;
    value: string;
    disabled: boolean;
    onChange: (state: boolean, label: string) => void;
}
export interface BaseCheckbox extends BaseProps {
    /**
    * 是否选中
    */
    checked: boolean
    /**
    * 是否禁用选择
    */
    disabled: boolean
    /**
    * 初始是否选中
    */
    defaultChecked: boolean
    /**
    * 形状
    */
    shape: CheckboxShape
    /**
    * 文本所在的位置
    */
    labelPosition: PositionX
    /**
    * 选中前
    */
    icon: ReactNode
    /**
    * 选中后
    */
    activeIcon: ReactNode
    /**
    * 半选状态
    */
    indeterminateIcon: ReactNode
    /**
    * 标识值，用于 Group 模式
    */
    value: string | number
    indeterminate: boolean;
    /**
    * 复选框的文本内容
    */
    label: ReactNode
    /**
    * 值变化时触发
    */
    onChange: (value: boolean) => void
}
export interface BaseCheckboxGroup extends BaseProps {
    disabled?: boolean;
    value?: string[];
    defaultValue?: string[];
    list: boolean;
    max: number | undefined;
    min: number | undefined;
    labelPosition: PositionX;
    direction: CheckboxDirection;
    options: CheckboxGroupOption[];
    onChange: (value: string[]) => void;
    onLimit: (type: CheckboxLimit) => void;
}
