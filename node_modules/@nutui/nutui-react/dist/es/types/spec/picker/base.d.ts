import { ReactNode } from 'react';
import { BaseProps } from '../../base/props';
export type PickerRef = PickerActions;
export type PickerActions = {
    open: () => void;
    close: () => void;
};
export type PickerValue = string | number | null;
export interface PickerOption {
    label: string | number;
    value: string | number;
    children?: PickerOptions;
}
export type PickerOptions = PickerOption[];
export interface BasePickerRoller {
    options: PickerOptions;
    keyIndex: number;
    value: PickerValue;
    threeDimensional: boolean;
    duration: number | string;
    onSelect: (option: PickerOption, index: number) => void;
    renderLabel: (item: PickerOption) => ReactNode;
}
export interface PickerOnChangeCallbackParameter {
    value: PickerValue[];
    index: number;
    selectedOptions: PickerOptions;
}
export type PickerColumnsType = 'single' | 'multiple' | 'cascade';
export interface BasePicker<POPUP_PROPS = any> extends BaseProps {
    /**
    * 是否可见
    */
    visible?: boolean | undefined
    /**
    * 设置标题
    */
    title?: string
    /**
    * 列表数据
    */
    options: PickerOptions[]
    /**
    * 选中值，受控
    */
    value?: PickerValue[]
    /**
    * 默认选中
    */
    defaultValue?: PickerValue[]
    /**
    * 是否开启3D效果
    */
    threeDimensional?: boolean
    /**
    * 快速滑动时惯性滚动的时长，单位 ms
    */
    duration: number | string
    /**
    * 是否点击遮罩关闭
    */
    closeOnOverlayClick: boolean
    renderLabel?: (item: PickerOption) => React.ReactNode;
    /**
    * 透传popup属性
    */
    popupProps: POPUP_PROPS
    /**
    * 点击确认按钮时候回调
    */
    onConfirm?: (selectedOptions: PickerOptions, selectedValue: PickerValue[]) => void
    /**
    * 点击取消按钮时触发
    */
    onCancel?: () => void
    /**
    * 确定和取消时，都触发
    */
    onClose?: (selectedOptions: PickerOptions, selectedValue: PickerValue[]) => void
    /**
    * 每一列值变更时调用
    */
    onChange?: (args0: PickerOnChangeCallbackParameter) => void
    children?: any;
}
