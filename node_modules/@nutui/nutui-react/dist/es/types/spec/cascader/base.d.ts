import { ReactNode } from 'react';
import { PopupCloseIconPosition } from '../popup/base';
export interface CascaderPane {
    nodes: [];
    selectedNode: CascaderOption | null;
    paneKey: string;
}
export interface CascaderOption {
    text?: string;
    value?: number | string;
    wordCode?: string;
    paneKey?: string;
    disabled?: boolean;
    children?: CascaderOption[];
    leaf?: boolean;
    level?: number;
    loading?: boolean;
    root?: boolean;
}
export interface CascaderConfig {
    value?: string;
    text?: string;
    children?: string;
}
export type CascaderValue = Exclude<CascaderOption['value'], undefined>[];
export interface CascaderOptionKey {
    textKey: string;
    valueKey: string;
    childrenKey: string;
}
export type CascaderActions = {
    open: () => void;
    close: () => void;
};
export interface CascaderFormat {
    topId?: string | number | null;
    idKey?: string;
    pidKey?: string;
    sortKey?: string;
}
export interface BaseCascader {
    /**
    * 是否弹窗状态展示
    */
    popup: boolean
    /**
    * 级联显示隐藏状态
    */
    visible: boolean
    /**
    * 选中激活颜色
    */
    activeColor: string
    /**
    * 标记选中的Icon
    */
    activeIcon: string
    /**
    * 级联数据
    */
    options: CascaderOption[]
    /**
    * 选中值，受控
    */
    value?: CascaderValue
    /**
    * 默认选中值
    */
    defaultValue?: CascaderValue
    /**
    * 自定义options中的关键字，valueKey、textKey、childrenKey
    */
    optionKey: CascaderOptionKey
    /**
    * 当options为可转换为树形结构的扁平结构时，配置转换规则
    */
    format: Record<string, string | number | null>
    /**
    * 是否显示关闭按钮，继承 Popup 组件
    */
    closeable: boolean
    /**
    * 取消按钮位置，继承 Popup 组件
    */
    closeIconPosition: PopupCloseIconPosition
    /**
    * 自定义关闭按钮，继承 Popup 组件
    */
    closeIcon: ReactNode
    /**
    * 是否开启动态加载
    */
    lazy: boolean
    /**
    * 动态加载回调，开启动态加载时生效
    */
    onLoad: (node: CascaderOption, levelIndex: number) => Promise<CascaderOption[]>
    /**
    * 选中值改变时触发
    */
    onChange: (value: CascaderValue, pathNodes: CascaderOption[]) => void
    /**
    * 选中项改变时触发
    */
    onPathChange: (value: CascaderValue, pathNodes: CascaderOption[]) => void
    onTabsChange: (index: number) => void;
}
