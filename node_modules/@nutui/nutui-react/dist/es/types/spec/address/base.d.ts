import React from 'react';
import { CascaderOption, CascaderOptionKey, CascaderValue } from "../../../types";
export interface RegionData {
    name?: string;
    [key: string]: any;
}
export interface CloseCallBackData extends Regions {
    addressIdStr: string;
    addressStr: string;
}
export type AddressRef = {
    open: () => void;
    close: () => void;
};
export interface ResultData {
    data: CloseCallBackData | AddressList;
    type: string;
}
export interface AddressList {
    id?: string | number;
    provinceName: string;
    cityName: string;
    countyName: string;
    townName: string;
    addressDetail: string;
    selectedAddress: boolean;
    name?: string;
    phone?: string;
}
export interface Regions {
    province: RegionData;
    city: RegionData;
    county: RegionData;
    town: RegionData;
}
export type AddressModeType = 'exist' | 'cascader' | 'elevator';
export interface BaseAddress {
    /**
    * 是否打开地址选择
    */
    visible: boolean
    /**
    * 初始地址选择打开/关闭状态
    */
    defaultVisible: boolean
    value?: CascaderValue;
    defaultValue?: CascaderValue;
    /**
    * 地址选择类型 exist/cascader/elevator
    */
    type: AddressModeType
    options: CascaderOption[];
    optionKey: CascaderOptionKey;
    format: Record<string, string | number | null>;
    /**
    * 是否可以切换自定义地址选择，type='exist' 时生效
    */
    custom: boolean | string
    /**
    * 已存在地址列表，每个地址对象中，必传值provinceName、cityName、countyName、townName、addressDetail、selectedAddress（字段解释见下）
    */
    existList: AddressList[]
    height: string | number;
    /**
    * 已有地址列表默认图标，type='exist' 时生效
    */
    defaultIcon: React.ReactNode
    /**
    * 已有地址列表选中图标，type='exist' 时生效
    */
    selectIcon: React.ReactNode
    /**
    * 自定义地址与已有地址切换时，自定义返回的按钮图标
    */
    backIcon: React.ReactNode
    /**
    * 是否展示热门城市，目前只在电梯模式下有效
    */
    hotList: RegionData[]
    /**
    * 点击'选择其他地址'或自定义地址选择左上角返回按钮触发
    */
    onSwitch?: (data: {
        type: string;
    }) => void
    /**
    * 选择已有地址列表时触发
    */
    onExistSelect?: (data: AddressList) => void
}
