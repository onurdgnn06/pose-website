import { ReactNode } from 'react';
import { PopupCloseIconPosition } from '../popup/base';
export interface CascaderPane {
    nodes: [];
    selectedNode: CascaderOption | null;
    paneKey: string;
}
export interface CascaderOption {
    text?: string;
    value?: number | string;
    wordCode?: string;
    paneKey?: string;
    disabled?: boolean;
    children?: CascaderOption[];
    leaf?: boolean;
    level?: number;
    loading?: boolean;
    root?: boolean;
}
export interface CascaderConfig {
    value?: string;
    text?: string;
    children?: string;
}
export type CascaderValue = Exclude<CascaderOption['value'], undefined>[];
export interface CascaderOptionKey {
    textKey: string;
    valueKey: string;
    childrenKey: string;
}
export type CascaderActions = {
    open: () => void;
    close: () => void;
};
export interface CascaderFormat {
    topId?: string | number | null;
    idKey?: string;
    pidKey?: string;
    sortKey?: string;
}
export interface BaseCascader {
    popup: boolean;
    visible: boolean;
    activeColor: string;
    activeIcon: string;
    options: CascaderOption[];
    value?: CascaderValue;
    defaultValue?: CascaderValue;
    optionKey: CascaderOptionKey;
    format: Record<string, string | number | null>;
    closeable: boolean;
    closeIconPosition: PopupCloseIconPosition;
    closeIcon: ReactNode;
    lazy: boolean;
    onLoad: (node: CascaderOption, levelIndex: number) => Promise<CascaderOption[]>;
    onChange: (value: CascaderValue, pathNodes: CascaderOption[]) => void;
    onPathChange: (value: CascaderValue, pathNodes: CascaderOption[]) => void;
    onTabsChange: (index: number) => void;
}
